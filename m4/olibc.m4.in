dnl
dnl                       Written by JoungKyun.Kim
dnl            Copyright (c) 2011 JoungKyun.Kim <http://oops.org>
dnl
dnl ----------------------------------------------------------------------------
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions are met:
dnl
dnl     * Redistributions of source code must retain the above copyright notice,
dnl       this list of conditions and the following disclaimer.
dnl
dnl     * Redistributions in binary form must reproduce the above copyright
dnl       notice, this list of conditions and the following disclaimer in the
dnl       documentation and/or other materials provided with the distribution.
dnl
dnl     * Neither the name of JoungKyun.Kim nor the url of oops.org
dnl       nor the names of their contributors may be used to endorse or
dnl       promote products derived from this software without specific prior
dnl       written permission.
dnl
dnl THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
dnl AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
dnl IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
dnl ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
dnl LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
dnl CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
dnl SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
dnl INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
dnl CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
dnl ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
dnl POSSIBILITY OF SUCH DAMAGE.
dnl ----------------------------------------------------------------------------
dnl  This file is part of olibc.
dnl
dnl  $Id: olibc.m4.in,v 1.4 2011-04-13 08:21:23 oops Exp $
dnl

AC_DEFUN([AX_OLIBC@COMPAT_VERSION@_WITH],
[
	if test "x$with_olibc@COMPAT_VERSION@" != "x"; then
		if test "x$with_olibc@COMPAT_VERSION@" = "xyes"; then
			olibc@COMPAT_VERSION@config="@static_bindir@/olibc@COMPAT_VERSION@-config"
		else
			olibc@COMPAT_VERSION@config="$with_olibc@COMPAT_VERSION@"
		fi
	else
		olibc@COMPAT_VERSION@config="@static_bindir@/olibc@COMPAT_VERSION@-config"
	fi

	AC_MSG_CHECKING(for olibc@COMPAT_VERSION@-config path)
	if test ! -f "$olibc@COMPAT_VERSION@config" || test ! -x "$olibc@COMPAT_VERSION@config"; then
		if test $olibc@COMPAT_VERSION@_check_failed -eq 1; then
			AC_MSG_ERROR(can't find $olibc@COMPAT_VERSION@config)
		else
			olibc@COMPAT_VERSION@config=
			AC_MSG_RESULT([not found])
		fi
	else
		AC_MSG_RESULT([$olibc@COMPAT_VERSION@config])
	fi
])

AC_DEFUN([AX_OLIBC@COMPAT_VERSION@_HEADER],
[
	#
	# olibc@COMPAT_VERSION@ header check
	#
	OLIBC@COMPAT_VERSION@_INCLUDES="`$olibc@COMPAT_VERSION@config --includes 2> /dev/null`"
	if test -z "$OLIBC@COMPAT_VERSION@_INCLUDES"; then
		OLIBC@COMPAT_VERSION@_INCLUDES="`$olibc@COMPAT_VERSION@config --defs 2> /dev/null | sed 's/[[ ]]*-D[[^ ]]*//g'`"
	fi

	ret_cppflags=0
	for check_cppflags in $CPPFLAGS
	do
		test -z "$OLIBC@COMPAT_VERSION@_INCLUDES" && break

		if test "$check_cppflags" = "$OLIBC@COMPAT_VERSION@_INCLUDES"; then
			ret_cppflags=1
			break
		fi
	done
	test $ret_cppflags -eq 0 && CPPFLAGS="$OLIBC@COMPAT_VERSION@_INCLUDES $CPPFLAGS"
	AC_CHECK_HEADERS(oc_type.h)
	if test "$ac_cv_header_oc_type_h" != "yes"; then
		AC_MSG_ERROR([You must need oc_type.h header file])
	fi
])

AC_DEFUN([AX_OLIBC@COMPAT_VERSION@_LD],
[
	#
	# olibc@COMPAT_VERSION@ library check
	#
	OLIBC@COMPAT_VERSION@_LDFLAGS="`$olibc@COMPAT_VERSION@config --ldflags 2> /dev/null`"

	olibc@COMPAT_VERSION@_OLD_LDFLAGS="$LDFLAGS"
	LDFLAGS="$OLIBC@COMPAT_VERSION@_LDFLAGS"
	AC_CHECK_LIB(
		$ac_olibc_name, $ac_olibc_check_symbol, [
			case "$ac_olibc_name" in
				ogc)
					AC_DEFINE(
						[HAVE_LIBOGC@COMPAT_VERSION@], 1,
						[Define to 1 if you have the `ogc@COMPAT_VERSION@' library (-logc@COMPAT_VERSION@).])
					;;
				oc)
					AC_DEFINE(
						[HAVE_LIBOC@COMPAT_VERSION@], 1,
						[Define to 1 if you have the `oc@COMPAT_VERSION@' library (-loc@COMPAT_VERSION@).])
					;;
				*)
					AC_DEFINE(
						[HAVE_LIBOLIBC@COMPAT_VERSION@], 1,
						[Define to 1 if you have the `olibc@COMPAT_VERSION@' library (-lolibc@COMPAT_VERSION@).])
					;;
			esac
			LIBS="`$olibc@COMPAT_VERSION@config --libs 2> /dev/null` $LIBS"
		],[
			if test $olibc@COMPAT_VERSION@_check_failed -eq 1; then
				AC_MSG_ERROR([Can't not found `$ac_olibc_name' library (-l$ac_olibc_name)])
			fi
		]
	)
	LDFLAGS="$olibc@COMPAT_VERSION@_OLD_LDFLAGS"

	ret_ldflags=0
	for check_ldflags in $LDFLAGS
	do
		test -z "$OLIBC@COMPAT_VERSION@_LDFLAGS" && break

		if test "$check_ldflags" = "$OLIBC@COMPAT_VERSION@_LDFLAGS"; then
			ret_ldflags=1
			break
		fi
	done

	test $ret_ldflags -eq 0 && LDFLAGS="$OLIBC@COMPAT_VERSION@_LDFLAGS $LDFLAGS"
])

AC_DEFUN([AX_OLIBC@COMPAT_VERSION@_LIBTOOL],
[
	#
	# olibc@COMPAT_VERSION@ library check
	#
	AC_MSG_CHECKING(for $ac_olibc_check_symbol in -l$ac_olibc_name)

	OLIBC@COMPAT_VERSION@_LIBS="`$olibc@COMPAT_VERSION@config --link-libtool 2> /dev/null`"

	if test "x$OLIBC@COMPAT_VERSION@_LIBS" = "x"; then
		AC_MSG_RESULT([no])
		if test $olibc@COMPAT_VERSION@_check_failed -eq 1; then
			AC_MSG_ERROR([Can't not found `$ac_olibc_name' libtool library ($ac_olibc_name.la)])
		fi
	else
		AC_MSG_RESULT([yes])
		LIBS="$OLIBC@COMPAT_VERSION@_LIBS $LIBS"
		case "$ac_olibc_name" in
			ogc@COMPAT_VERSION@)
				AC_DEFINE(
					[HAVE_LIBOGC@COMPAT_VERSION@], 1,
					[Define to 1 if you have the `ogc@COMPAT_VERSION@' library (-logc@COMPAT_VERSION@).])
				;;
			oc@COMPAT_VERSION@)
				AC_DEFINE(
					[HAVE_LIBOC@COMPAT_VERSION@], 1,
					[Define to 1 if you have the `oc@COMPAT_VERSION@' library (-loc@COMPAT_VERSION@).])
				;;
			*)
				AC_DEFINE(
					[HAVE_LIBOLIBC@COMPAT_VERSION@], 1,
					[Define to 1 if you have the `olibc@COMPAT_VERSION@' library (-lolibc@COMPAT_VERSION@).])
				;;
		esac
	fi
])

dnl
dnl Usage AX_OLIBC@COMPAT_VERSION@
dnl     AX_OLIBC@COMPAT_VERSION@([library type],[stop on failed])
dnl         library type : ld or libtool
dnl         stop on failed : 1 => stop, 0 => continue
dnl
dnl     AX_OLIBC@COMPAT_VERSION@([library type])
dnl     AX_OLIBC@COMPAT_VERSION@(1)
dnl
dnl     no argument on AX_OLIBC@COMPAT_VERSION@
dnl         library type   = ld
dnl         stop on failed = 0
dnl
AC_DEFUN([AX_OLIBC@COMPAT_VERSION@],
[
	ax_olibc@COMPAT_VERSION@_argc=$#
	olibc@COMPAT_VERSION@_check_failed=0

	if test $ax_olibc@COMPAT_VERSION@_argc -gt 0; then
		ax_olibc@COMPAT_VERSION@_first_arg=$1
		ax_olibc@COMPAT_VERSION@_second_arg=$2
	fi

	if test $ax_olibc@COMPAT_VERSION@_argc -gt 0; then
		if test $ax_olibc@COMPAT_VERSION@_argc -eq 2; then
			if test "$ax_olibc@COMPAT_VERSION@_first_arg" = "libtool"; then
				olibc@COMPAT_VERSION@_ld_mode="libtool"
			elif test "$ax_olibc@COMPAT_VERSION@_first_arg" = "ld"; then
				olibc@COMPAT_VERSION@_ld_mode="ld"
			else
				AC_MSG_ERROR([Unsupported link type on AX OLIBC@COMPAT_VERSION@ macro])
			fi

			if test $ax_olibc@COMPAT_VERSION@_second_arg -eq 1; then
				olibc@COMPAT_VERSION@_check_failed=1
			fi
		elif test $ax_olibc@COMPAT_VERSION@_argc -eq 1; then
			if test "$ax_olibc@COMPAT_VERSION@_first_arg" = "libtool"; then
				olibc@COMPAT_VERSION@_ld_mode="libtool"
			elif test "$ax_olibc@COMPAT_VERSION@_first_arg" = "ld"; then
				olibc@COMPAT_VERSION@_ld_mode="ld"
			elif test $ax_olibc@COMPAT_VERSION@_first_arg -eq 1 || test $ax_olibc@COMPAT_VERSION@_first_arg -eq 0 ; then
				olibc@COMPAT_VERSION@_check_failed=$ax_olibc@COMPAT_VERSION@_first_arg
			else
				AC_MSG_ERROR([Unsupported argument value on AX OLIBC@COMPAT_VERSION@ macro])
			fi
		else
			AC_MSG_ERROR([So many arguments on AX OLIBC@COMPAT_VERSION@ macro])
		fi
	fi

	AC_ARG_WITH(olibc@COMPAT_VERSION@,
		[  --with-olibc@COMPAT_VERSION@=PATH      path of olibc@COMPAT_VERSION@-config [[default: @static_bindir@/olibc@COMPAT_VERSION@-config]]])

	if test "x$with_olibc@COMPAT_VERSION@" != "xno"; then
		AX_OLIBC@COMPAT_VERSION@_WITH
		if test "x$olibc@COMPAT_VERSION@config" != "x"; then
			ac_olibc_name="`$olibc@COMPAT_VERSION@config --libname 2> /dev/null`"
			if test "x$ac_olibc_name" = "x"; then
				ac_olibc_name="olibc@COMPAT_VERSION@"
			fi
		else
			ac_olibc_name="olibc@COMPAT_VERSION@"
		fi

		if test "$ac_olibc_name" = "ogc@COMPAT_VERSION@"; then
			ac_olibc_check_symbol="convert_punycode"
		else
			ac_olibc_check_symbol="join"
		fi

		if test "$olibc@COMPAT_VERSION@_ld_mode" = "libtool"; then
			AX_OLIBC@COMPAT_VERSION@_LIBTOOL
		else
			AX_OLIBC@COMPAT_VERSION@_LD
		fi
		AX_OLIBC@COMPAT_VERSION@_HEADER
	else
		if test $olibc@COMPAT_VERSION@_check_failed -eq 1; then
			AC_MSG_ERROR([--without-olibc@COMPAT_VERSION@ doesn't permit])
		fi
	fi
])
