.TH trim_r(1) 2004-02-19 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man trim_r.3
.\" 2004-02-19 JoungKyun Kim <htt://oops.org>
.\" $Id: trim_r.3,v 1.6 2011-02-07 07:59:52 oops Exp $
.SH 이름
trim_r

.SH 사용법
.B #include <olibc/libstring.h>
.sp
.BI "char * trim_r(char *str, int should_free);"

.SH 라이브러리 링크
.B gcc source -loc
.br

또는

.B gcc source -logc
.br

libogc 를 정적으로 링크할 경우에는 LGPL2 에 근거하여 사용이 가능하며, liboc 를
정적으로 링크할 경우에는 BPL 에 근거한다.

.SH 설명
문자열 앞/뒤의 공백문자를 제거한다.

.B trim
함수와 동일하게 작동을 하나, 원형을 변형하지 않으며, 새로운 메모리 주소를 할당을 하여
반환한다.

.TP
.B str
.br
공백 문자를 제거할 문자열을 지정한다. 단, 이 인자는 반드시 메모리 할당이 되어 있어야만
한다.

.TP
.B should_free
.br
1 로 지정을 하면, str 인자를 함수 내부에서 메모리 해제(free) 를 시도한다. 0 으로 지정을
하면 아무런 작동을 하지 않는다.

.SH 반환값
반환된 값은 반드시 메모리 해제(free)를 해야 한다.

.SH 예제
.nf
#include <olibc/libstring.h>

char *str = "    asdf    ";
char *buf;

/* str 변수의 앞/뒤 공백을 삭제 */
buf = trim_r (str, 0);
printf ("STR: %s\\nBUF: %s\\n", str, buf);

free (buf);
.fi

.SH 참조
trim(1)

.SH 작성
2004.02.19 김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
