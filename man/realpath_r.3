.TH realpath_r(1) 2009-10-29 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man realpath_r.1
.\" 2009-10-29 JoungKyun Kim <htt://oops.org>
.\" $Id: realpath_r.3,v 1.1 2009-10-29 14:02:00 oops Exp $
.SH 이름
realpath_r

.SH 사용법
.B #include <olibc/libfile.h>
.sp
.BI "char * realpath_r (char *path);"

.SH 라이브러리 링크
.B gcc source -l liboc
.br

또는

.B gcc source -l libolibc
.br

libolibc 를 정적으로 링크할 경우에는 LGPL2 에 근거하여 사용이 가능하며, liboc 를
정적으로 링크할 경우에는 BPL 에 근거한다.

.SH 설명
주어진 경로의 절대 경로를 반환 한다.

이 함수는 내부적으로 chdir과 getcwd를 이용하여 절대 경로를 구하며, link 파일을
따라 가지는 않는다.

.TP
.B path
.br
절대 경로를 찾을 경로를 지정

.SH 반환값
주어진 경로의 절대 경로를 반환 한다. 절대 경로를 찾을 수 없을 경우 NULL을 반환하며
errno가 지정이 된다.

반환 값은 내부적으로 malloc을 이용하기 때문에 꼭 메로리 해제를 해 주어야 한다.

.TP
.B EACCES
해당 파일이 확인을 할 수 없는 (접근 권한이 없는) 경로에 존재
.TP
.B EBADF
fd가 유효한 파일 기술자가 아님
.TP
.B EFAULT
접근할 수 없는 메모리 주소를 가리킴
.TP
.B ENAMETOOLONG
path가 너무 김
.TP
.B ENOENT
파일이 너무 길거나, 파일명이 주어지지 않음
.TP
.B ENOMEM
커널 메모리가 부족 함
.TP
.B EIO
I/O 에러가 발생

.SH 예제
.nf
#include <olibc/libfile.h>

char *path = realpath_r ("../../some.file");
printf ("Absolute path is %s\\n", path);
free (path);
.fi

.SH 참조
getcwd(3) chdir(2)

.SH 작성
2009.10.29 김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
