.TH long2bin(3) 2011-03-19 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man long2bin.3
.\" 2011-03-19 JoungKyun Kim <htt://oops.org>
.\" $Id: long2bin.3,v 1.3 2011-03-28 06:47:01 oops Exp $
.SH NAME
long2bin \- Convert 64bit integer to binary string
.br
dec2bin \- Convert decimal string to binary

.SH SYNOPSIS
.B #include <olibc/libstring.h>
.sp
.BI "char * long2bin (Long64 src, size_t * outlen);"
.sp
.BI "char * dec2bin (CChar * src, size_t * outlen);"

.SH Link library
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
and
.B libolibc.a
include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.
If you don't need idn library and, don't want LGPL 2 effects,
use
.B liboc.so
or
.B liboc.a
that follows BSD license.

.SH DESCRIPTION
The
.BI long2bin()
api convert 64bit integer to binary string.

The
.BI long2bin()
api caculate 64bit integer with high and low bit for 32bit and 64bit
compatibility.

.TP
.B src
.br
The input 64bit ingeter

.TP
.B outlen
.br
The length of return string

.PP
The
.BI dec2bin()
api convert decimal string to binary string.

.TP
.B dec
.br
The input deciaml string

.TP
.B outlen
.br
The length of return string

.SH "RETURN VALUE"
The pointer of binary string.

When occurs internal error, the return value has null.
If the return value is not null, the caller should deallocate
this buffer using
.BI free().

.SH EXAMPLE
.nf
#include <olibc/libstring.h>

int main (void) {
    Long64  src = 1000;
    char    * dec = "-1000";
    char    * dst;
    size_t  len;

    if ( (dst = long2bin (src, &len)) != null ) {
        printf ("%s\\n", dst);
        free (dst);
    }

    if ( (dst = dec2bin (dec, &len)) != null ) {
        printf ("%s\\n", dst);
        free (dst);
    }
}

.fi

.SH "SEE ALSO"
bin2long(3), bin2dec(3)

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
