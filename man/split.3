.TH split(1) 2004-02-19 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man split.1
.\" 2004-02-19 JoungKyun Kim <htt://oops.org>
.\" $Id: split.3,v 1.8 2011-03-16 11:17:40 oops Exp $
.SH 이름
split

.SH 사용법
.B #include <olibc/libarg.h>
.sp
.BI "char ** split (char *stream, int *argc, char *delimiter);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD 라이센스의 적용을
원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
문자열을 주어진 delimiter 에 의해서 배열로 반환한다. delimiter 는 문자열로
지정을 하며, 지정된 문자열은 charactor 단위로 문자열을 쪼개게 된다. 이는
delimiter 가 'ab' 로 지정이 되었을 경우 'ab' 로 쪼개는 것이 아니라 'a' 또는
'b' 로 쪼개는 것을 의미한다.

또한, 주어진 문자열 중, delimiter 에 지정된 charactor 과 매치가 되는 글
자가 있더라도 매치가 되는 글자 앞에 '\\' 가 있을 경우에는 무시가 된다.

stream 은 원본 문자열을 지정한다.

argc 는 생성된 배열의 수를 반환한다.

delimiter 는 배열로 구분할 문자열을 지정한다.

.SH 반환값
생성된 배열은 ofree_array 함수로 메모리 해제를 해 주어야 한다.
stream 이나 delimiter 가 주어지지 않으면 NULL 을 반환을 한다.

각 배열 멤버들의 앞뒤 공백은 제거가 된다.

.SH 예제
.nf
#include <olibc/libarg.h>

char ** sep;
char *a = "abcA abcAabc ";
int i, j;

sep = split (a, &i, "A");

for (j = 0; j < i; j++) {
    printf ("** %s\\n", sep[j]);
}

ofree_array (sep);
.fi

.SH 참고
ofree_array(1)

.SH 작성
2004.02.19 김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
