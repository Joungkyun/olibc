.TH preg_replace(3) 2011-03-17 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man preg_replace.3 | less
.\" 2011-03-17 JoungKyun Kim <htt://oops.org>
.\" $Id$
.SH NAME
preg_replace \- Perform a regular expression search and replace
.br
preg_replace_arr

.SH SYNOPSIS
.B #include <olibc/libpcre.h>
.sp
.BI "char * preg_replace (char *regex, char *replace, char *subject, int *retlen);"
.br
.BI "char * preg_replace_arr (char ** regex, char ** replace, char * subject, int regarr_no);"

.SH "Link library"
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
and
.B libolibc.a
include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.
If you don't need idn library and, don't want LGPL 2 effects,
use
.B liboc.so
or
.B liboc.a
that follows BSD license.

.SH DESCRIPTION
The
.BI preg_replace()
function is C API of
.B PHP preg_replace()
and use some of
.B PHP preg_replace()
code. But can't use \'e\' pattern modifier and don't support
callback function.

Searches subject for matches to pattern and replaces them with
replacement. If matches are found, the new subject will be returned,
otherwise will be returned NULL if an error occurred.

The
.BI preg_replace_arr()
is same as the
.BI preg_replace
except that
.B regex
and
.B replace
are string array.

.TP
.B regex
.br
The pattern to search for. The rule of regex is
.B "/PATTERN/PATTERN_MODIFIER".
On
.BI preg_replace_arr(),
this is string array.

.TP
.B replace
.br
Will replacing string.
On
.BI preg_replace_arr(),
this is string array.

.TP
.B subject
.br
The input string.

.TP
.B retlen
.br
The length of returned string. See also
.B regarr_no
about the
.BI preg_replace_arr()
api.

.TP
.B regarr_no
.br
Length of
.B regex
and
.B replace arrays.
Length of
.B regex array
is must same as length of
.B replace array.

.SH "RETURN VALUE"
Character pointer of The replaced string.
When occurs internal error,
.BI preg_replace()
returns null. If the return character pointer is not null,
the caller should deallocate this buffer using
.BI free().

.SH EXAMPLE
.nf
#include <olibc/libpcre.h>

int main (void) {
    char * result;

    {
        int len;

        result = preg_replace ("/xx/i", "!!", "SeeEEeex", &len);
        printf ("%s\\n", result);

        free (result);
    }

    {
        char * regex[3] = { "/X/", "Y", "Z" };
        char * rep[3] = { "x", "y", "z" };

        result = preg_replace_arr (regex, rep, "opqrstuvwXYZ", 3);
        printf ("%s\\n", result);

        free (result);
    }

    return 0;
}
.fi

.SH "SEE ALSO"
preg_quote(3), preg_grep(3), preg_fgrep(3)

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
