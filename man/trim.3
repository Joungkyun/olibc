.TH trim(1) 2004-02-19 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man trim.3
.\" 2004-02-19 JoungKyun Kim <htt://oops.org>
.\" $Id: trim.3,v 1.6 2011-03-16 11:17:40 oops Exp $
.SH 이름
trim

.SH 사용법
.B #include <olibc/libstring.h>
.sp
.BI "void trim(char *str);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD 라이센스의 적용을
원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
문자열 앞/뒤의 공백문자를 제거한다.

php 의 trim 함수와 동일하게 작동을 하지만, 값을 리턴하지는 않는다. void 형으로 작동을
하며, perl 의 chomp 와 같이 호출을 하여 변경하고자 하는 변수 자체를 변경을 한다. 만약
변수 원형을 수정하고 싶지 않다면,
.B trim_r
함수를 이용하도록 한다.

.TP
.B str
.br
공백 문자를 제거할 문자열을 지정한다. 단, 이 인자는 반드시 메모리 할당이 되어 있어야만
한다.

.SH 반환값
없음

.SH 예제
.nf
#include <olibc/libstring.h>

char *str;

str = malloc (sizeof (char) * 32);
strcpy (str, "   asdf   ");

/* str 변수의 앞/뒤 공백을 삭제 */
trim (str);
printf ("%s\\n", str);

free (str);
.fi

.B 다음의 예제는 잘못된 사용이다.

.nf
#include <olibc/libstring.h>

char *str = "    asdf    ";

/* str 변수에 메모리 할당이 되어 있지 않다 */
trim (str);
printf ("%s\\n", str);
.fi

.SH 참조
trim(1)

.SH 작성
2004.02.19 김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
