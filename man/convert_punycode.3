.TH convert_punycode(3) 2011-03-14 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man convert_punycode.3
.\" 2011-03-14 JoungKyun Kim <htt://oops.org>
.\" $Id$
.SH NAME
convert_punycode \- Convert between punycode and international domain.

.SH SYNOPSIS
.B #include <olibc/libidn.h>
.sp
.BI "char * convert_punycode (char * domain, int mode, int debug);"
.br
.BI "unsigned int convert_punycode_r (const char * src, unsigned char ** dst, bool mode, const char * charset)"

.SH 라이브러리 링크
.B \-logc
or
.B \-lolibc
.br

The libraries are include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.

.SH DESCRIPTION
These apis convert to punycode from international domain or
convert to international domain from punycode

.TP
.B domain
.br
International domain for converting

.TP
.B mode
.br
encode(set 0) or decode(set 1)

.TP
.B debug
.br
Deprecated (no action). For debugging, use -D__OCDEBUG__ on build time.

.SH "RETURN VALUE"
The 
.BI convert_punycode() 
returns static allocated memory, so this api is not thread safe. 
If you want to thread safe, use 
.BI convert_punycode_r().

The
.BI convert_punycode_r() return length of 2th argument. When The
.BI convert_punycode_r()
api occurs internal error, 2th argument dst has null value. If the
dst argument has not null, the caller should deallocate this buffer
using
.BI free().

.SH EXAMPLE
.nf
#include <olibc/libidn.h>

int main (void) {
    char x[32] = "한글도메인.kr";
    char y[64] = "xn--bj0bj3i97fq8o5lq.kr";
	char * buf;
    unsigned int len;

    printf ("%s\\n", convert_punycode (x, 0, 1));
    printf ("%s\\n", convert_punycode (y, 1, 1));

    len = convert_punycode_r (x, &buf, 0, "EUC-KR");
    if ( buf != NULL ) {
        printf ("%s\\n", buf);
        free (buf);
    }

    len = convert_punycode_r (y, &buf, 0, "EUC-KR");
    if ( buf != NULL ) {
        printf ("%s\\n", buf);
        free (buf);
    }

    return 0;
}
.fi

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
