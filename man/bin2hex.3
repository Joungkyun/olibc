.TH bin2hex(3) 2011-03-30 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man bin2hex.3
.\" 2011-03-30 JoungKyun Kim <htt://oops.org>
.\" $Id: bin2hex.3,v 1.9 2011-03-29 17:24:36 oops Exp $
.SH NAME
bin2hex \- Convert binary data into hexadecimal representation.

.SH SYNOPSIS
.B #include <olibc/libstring.h>
.sp
.BI "char * bin2hex (const char * str, size_t * outlen);"

.SH Link library
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
and
.B libolibc.a
include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.
If you don't need idn library and, don't want LGPL 2 effects,
use
.B liboc.so
or
.B liboc.a
that follows BSD license.

.SH DESCRIPTION
The
.BI bin2hex()
function converts binary string to hexadecimal string. The binary string
that is out of range is converted \'?\' character.

.TP
.B str
.br
The input binary string

.TP
.B outlen
.br
The length of return value. This argument is set null, don't count
length of return string.

.SH "RETURN VALUE"
The point of hexadecimal string

When the
.BI bin2hex()
occurs internal error, returns null. If return value is string array pointer,
the caller should deallocate this buffer using
.BI free().

.SH EXAMPLE
.nf
#include <olibc/libstring.h>

int main (void) {
    const char *src = "101100101110010011100100";
    char *dest;
    unsigned int len;

    if ( (dest = bin2hex (src, * len) != null ) {
        printf ("%s (%d)\\n", dest, len);
        free (dest); // must need
    }

    return 0;
}

.fi

.SH "SEE ALSO"
hex2bin(3), hex2bin_r(3)

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
