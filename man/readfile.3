.TH readfile(3) 2011-03-24 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man readfile.3
.\" 2011-03-24 JoungKyun Kim <htt://oops.org>
.\" $Id$
.SH NAME
readfile \- Reads entire file into a string.

.SH SYNOPSIS
.B #include <olibc/libfile.h>
.sp
.BI "size_t readfile (const char * path, char ** buf);"

.SH "Link library"
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
and
.B libolibc.a
include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.
If you don't need idn library and, don't want LGPL 2 effects,
use
.B liboc.so
or
.B liboc.a
that follows BSD license.

.SH DESCRIPTION
The
.BI readfile()
api reads data from path, and returns length of read data. This
api is
.BI "binary safe"

.TP
.BI path
.br
The filename being read.

.TP
.BI buf
.br
The pointer of file context. When the
.BI readfile()
api occurs internal error, this argument has
.B null.

The
.B buf
parameter is allocated memory into
.BI readfile()
api, so the caller should deallocate this buffer using
.BI free()
api.

.SH "RETURN VALUE"
The length of read data.

.SH EXAMPLE
.nf
#include <olibc/libfile.h>

int main (void) {
    char *text;
    char *path = "/etc/hosts";
    size_t len;

    len = readfile (path, &text);
    if ( text != null ) {
        printf ("%s\\n", text);
        free (text);
    } else {
        printf ("failed\\n");
    }

    return 0;
}
.fi

.SH "SEE ALSO"
writefile(3)

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
