.TH addslashes(3) 2011-03-26 "Linux Manpage" "OOPS C Library's Manual"
.\" Process with
.\" nroff -man addslashes.3
.\" 2011-03-09 JoungKyun Kim <htt://oops.org>
.\" $Id: addslashes.3,v 1.3 2011-03-29 17:24:36 oops Exp $
.SH 이름
addslashes \- 문자열을 슬래시로 인용

.SH 사용법
.B #include <olibc/libstring.h>
.sp
.BI "bool addslashes (const char * in, size_t inlen, char ** out, size_t * outlen);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD 라이센스의 적용을
원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
데이터 베이스 쿼리와 같이 인용된 부분 앞에 백슬래쉬를 붙여 반환한다. 이런 문자에는
작은 따옴표 ('), 큰 따옴표 ("), 백슬래쉬 (\\), 그리고 NULL (\\0)이 있다.

NULL byte (\\0)은 문자열 '\\0'으로 변환이 된다.

.TP
.B in
.br
입력할 문자열

.TP
.B inlen
.br
입력할 문자열의 길이

.TP
.B out
.br
변환된 문자열이 저장

.TP
.B outlen
.br
.B out
인자의 길이. 이 변수를 null로 선언을 하면, 길이를 세지 않는다.

.SH 반환값
bool.

실패시,
.B out
인자는 NULL 값을 가진다. NULL이 아닐 경우, free() api를 이용하여
메모리를 반환해야 한다.

.SH 예제
.nf
#include <olibc/libstring.h>

int main (void) {
    char * str;
    char * in;
    char * out;
    size_t outlen;

    str = malloc (sizeof (char) * 32);
    strcpy (str, "abc'def'gh\\"ij\\"klmn");

    // free memory str variabl into addslashes()
    if ( addslashes (str, strlen (str), &out, &outlen) != false ) {
    	printf ("%s\\n", out);
        free (out);
    }

    free (str);

    return 0;
}
.fi

.SH 작성
김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org/ 로 리포팅을 부탁한다.

