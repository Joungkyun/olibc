.TH addslashes(3) 2011-03-09 "Linux Manpage" "OOPS C Library's Manual"
.\" Process with
.\" nroff -man addslashes.3
.\" 2011-03-09 JoungKyun Kim <htt://oops.org>
.\" $Id$
.SH 이름
addslashes \- 문자열을 슬래시로 인용

.SH 사용법
.B #include <olibc/libstring.h>
.sp
.BI "char * addslashes (char * str, bool should_free);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD 라이센스의 적용을
원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
데이터 베이스 쿼리와 같이 인용된 부분 앞에 백슬래쉬를 붙여 반환한다. 이런 문자에는
작은 따옴표 ('), 큰 따옴표 ("), 백슬래쉬 (\\), 그리고 NULL (null byte)이 있다.

이 함수는 php 의 addslashes 와 동일하게 작동을 한다.

.TP
.B str
.br
변환할 원본 문자열이 들어 있는 변수를 지정한다.

.TP
.B should_free
.br
.B true
로 지정을 하면
.B addslashes()
함수 내부에서 str의 메모리 해제(free)를 시도한다.
.B false
를 지정하면 아무런 작동을 하지 않는다.

.SH 반환값
변환된 문자열의 포인터가 반환된다. 반환된 포인터는 메모리
해제(free)를 해 줘야 한다.

.SH 예제
.nf
#include <olibc/libstring.h>

char *buf;
char *str;

str= malloc (sizeof (char) * 32);
strcpy (str, "abc'def'gh\\"ij\\"klmn");

/* str 변수는 addslashes 함수 내부에서 메모리 해제가 된다 */
buf = addslashes (str, 1);
printf ("%s\\n", buf);

free (buf);
.fi

.SH 작성
김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org/ 로 리포팅을 부탁한다.

