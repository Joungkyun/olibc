.TH split(3) 2011-03-18 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man split.3
.\" 2011-03-18 JoungKyun Kim <htt://oops.org>
.\" $Id: split.3,v 1.3 2011-03-24 16:11:40 oops Exp $
.SH 이름
split \- 문자열을 경계 문자를 이용하여 배열로 분리
.br
join \- 문자열로 배열 원소를 결합

.SH 사용법
.B #include <olibc/libfile.h>
.sp
.BI "char ** split (const char * stream, int * argc, const char * delimiter);"
.br
.BI "char * join (const char * glue, char ** sep, const int size);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD
라이센스의 적용을 원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
.BI split()
api는 문자열을 주어진 delimiter 에 의해서 배열로 반환한다. delimiter는
문자열로 지정을 하며, 지정된 문자열은 charactor 단위로 문자열을
쪼개게 된다. 이는 delimiter 가 \'ab\' 로 지정이 되었을 경우 \'ab\'
로 쪼개는 것이 아니라 \'a\' 또는 \'b\' 로 쪼개는 것을 의미한다.

또한, 주어진 문자열 중, delimiter 에 지정된 charactor 과 매치가 되는
글자가 있더라도 매치가 되는 글자 앞에 \'\\\' 가 있을 경우에는 무시가
된다.

.TP
.B stream
.br
입력 문자열

.TP
.B argc
.br
생성된 배열의 수를 반환한다.

.TP
.B delimiter
.br
배열을 구분할 문자열을 지정한다.

.PP
.BI join()
api는 문자열 배열을 문자열 배열로 glue를 구분자로 병합한 후에
문자열의 포인터를 반환한다.

.TP
.B glue
.br
병합할 구분자. null로 설정이 되면 구분자 없이 병합이 된다.

.TP
.B sep
.br
병합할 문자열 배열

.TP
.B size
.br
sep의 크기

.SH 반환값
.BI split()
api는 stream 이나 delimiter 가 주어지지 않으면 NULL 을 반환을 한다.
반환되는 배열의 마지막은 NULL값을 가진다. 또한 각 배열 요소들의
앞뒤 공백은 제거가 된다.

반환값이 NULL이 아닐경우,
.BI ofree_array()
api로 메모리를 반환해야 한다.

.BI join()
api는 병합된 문자열의 포인터를 반환한다. 에러가 발생할 경우 null을
반환한다.

반환값이 NULL이 아닐경우,
.BI free()
api로 메모리를 반환해야 한다.

.SH 예제
.nf
#include <olibc/libstring.h>
#include <olibc/libarg.h> // for ofree_array()

int main (void) {
    char ** sep;
    char *a = "abcA abcAabc ";
    char *j;
    int i, j;

    sep = split (a, &i, "A");

    for (j = 0; j < i; j++) {
        printf ("** %s\\n", sep[j]);
    }

    j = join ("A", sep);
    printf ("%s\n", j);

    free (j);
    ofree_array (sep);
    return 0;
}
.fi

.SH 참고
ofree_array(3)

.SH 작성
김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
