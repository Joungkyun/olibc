.TH is_utf8(3) 2011-03-21 "Linux Manpage" "OOPS C Library's Manual"
.\" Process with
.\" nroff -man is_utf8.3
.\" 2011-03-21 JoungKyun Kim <htt://oops.org>
.\" $Id: is_utf8.3,v 1.1 2011-03-21 06:44:53 oops Exp $
.SH 이름
is_utf8 \- utf8인지 아닌지를 검사
.br
is_ksc5601 \- 2byte가 ksc5601인지 아닌지를 검사

.SH 사용법
.B #include <olibc/libstring.h>
.sp
.BI "bool is_utf8 (unsigned const char * src);"
.br
.BI "bool is_ksc5601 (UInt c1, UInt c2);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD 라이센스의 적용을
원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
.BI is_utf8()
api는 주어진 소스 문자열이 utf8인지 아닌지를 검사한다.

.TP
.B src
.br
검사할 문자열

.TP
.BI is_ksc5601()
api는 주어진 2byte가 ksc5601인지 아닌지를 판단한다.

.TP
.B c1
.br
한글의 첫번째 바이트

.TP
.B c2
.br
한글의 두번째 바이트

.SH 반환값
bool

.SH 예제
.nf
#include <olibc/libstring.h>

int main (void) {
    unsigned char euc[5] = { 0, };
    unsigned char utf[7] = { 0, };

    // hangul jeong
    sprintf (euc, "%c%c", 0xc1, 0xa4);
    sprintf (utf, "%c%c%c", 0xec, 0xa0, 0x95);

    /*
     * is_ksc5601 test
     */

    if ( is_ksc5601 (ecu[0], euc[1]) )
        pritnf ("Yes hangul\\n");
    else
        pritnf ("No hangul\\n");

    if ( is_utf8 (utf) )
        pritnf ("Yes utf8\\n");
    else
        pritnf ("No utf8\\n");

    return 0;
}
.fi

.SH 참조
charset_conv(3)

.SH 작성
김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org/ 로 리포팅을 부탁한다.
