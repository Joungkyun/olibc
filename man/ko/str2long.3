.TH str2long(3) 2011-03-18 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man str2long.3
.\" 2011-03-18 JoungKyun Kim <htt://oops.org>
.\" $Id: str2long.3,v 1.1 2011-03-18 07:08:50 oops Exp $
.SH 이름
str2long \- 숫자로 된 문자열을 long형으로 변환
.br
str2double \- 숫자로 된 문자열을 double형으로 변환 

.SH 사용법
.B #include <olibc/libstring.h>
.sp
.BI "long long str2long (const char * src);"
.br
.BI "long double str2double(const char * str);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고,
BSD 라이센스의 적용을 원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
.BI str2long()
api는 숫자로 된 문자열을 64bit integer로 변환한다. 시스템에서
.BI strtoll()
을 지원하면, strtoll을 이용한다.

.BI str2double()
api는 숫자로 된 문자열을 64bit double로 변환을 한다.

.TP
.B src
.br
숫자로된 문자열

.SH 반환값
64bit integer and double integer

.SH 예제
.nf
#include <olibc/libstring.h>

int main (void) {
    char *buf = "1234567890123456789";
    char *bufd = "1234567890123456789.1234";
    long long a = 0;
    long double b = 0;

    a = str2long (buf);
    b = str2double (bufd);

    printf ("%lld\\n", a);
    printf ("%Lf\\n", b);
    return 0;
}
.fi

.SH 참조
check_int(3) char2int(3)

.SH 작성
김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
