.TH file_exists(3) 2011-03-16 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man file_exists.3
.\" 2011-03-16 JoungKyun Kim <htt://oops.org>
.\" $Id: file_exists.3,v 1.1 2011-03-16 11:17:40 oops Exp $
.SH 이름
file_exists \- 파일이나 디렉토리가 존재하는지 검사

.SH 사용법
.B #include <olibc/libfile.h>
.sp
.BI "int file_exists (const char * path, int mode);"

.SH 라이브러리 링크
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
또는
.B libolibc.a
에는
.BI "LGPL2 symbol"
이 포함되어 있으므로 이 라이브러리를
링크하려면 LGPL2의 영향을 받는다. idn관련 api를 사용하지 않고, BSD 라이센스의 적용을
원한다면
.B liboc.so
나
.B liboc.a
를 이용해야 한다.

.SH 설명
해당 경로가 존재하는지 여부를 체크한다. 모드를 지정하면 해당 경로의 타입까지
체크가 가능하다.

.TP
.B path
.br
체크할 경로를 지정한다.

.TP
.B mode
.br
다음의 상수를 참고한다.

.br
.B _IS_NCHK 0
=> 해당 경로의 존재 여부만 체크한다.
.br
.B _IS_FILE 1
=> path 가 파일 인지를 체크
.br
.B _IS_DIR 2
=> path 가 디렉토리 인지를 체크
.br
.B _IS_SLINK 3
=> path 가 심볼릭 링크 인지를 체크
.br
.B _IS_CDEV 4
=> path 가 캐릭터 디바이스 인지를 체크
.br
.B _IS_BDEV 5
=> path 가 블럭 디바이스 인지를 체크
.br
.B _IS_FIFO 6
=> path 가 FIFO 인지를 체크
.br
.B _IS_SOCK 7
=> path 가 소켓 인지를 체크

.SH 반환값
참이면 1을 반환하고, 거짓이면 0을 반환한다.

.SH 예제
.nf
#include <olibc/libfile.h>

int main (void) {
    char * path = "/var";

    printf ("ANY  : %d\\n", file_exists (path, _IS_NCHK));
    printf ("FILE : %d\\n", file_exists (path, _IS_FILE));
    printf ("DIR  : %d\\n", file_exists (path, _IS_DIR));
    printf ("SLINK: %d\\n", file_exists (path, _IS_SLINK));
    printf ("CDEV : %d\\n", file_exists (path, _IS_CDEV));
    printf ("BDEV : %d\\n", file_exists (path, _IS_BDEV));
    printf ("FIFO : %d\\n", file_exists (path, _IS_FIFO));
    printf ("SOCK : %d\\n", file_exists (path, _IS_SOCK));

    return 0;
}
.fi

.SH 작성
김정균 <http://oops.org>

.SH 버그
버그가 발견이 되면 http://oops.org 로 리포팅을 부탁한다.
