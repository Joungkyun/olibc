.TH preg_grep(3) 2011-03-17 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man preg_grep.3
.\" 2011-03-17 JoungKyun Kim <htt://oops.org>
.\" $Id: preg_grep.3,v 1.6 2011-03-16 15:18:06 oops Exp $
.SH NAME
preg_grep \- Return matched line of given strings. 
.br
preg_fgrep \- return matched line of given file.

.SH SYNOPSIS
.B #include <olibc/libpcre.h>
.sp
.BI "char * preg_grep (const char * regex, const char * subject, bool reverse);"
.br
.BI "char * preg_fgrep (const char * regex, const char * path, bool reverse);"

.SH "Link library"
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
and
.B libolibc.a
include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.
If you don't need idn library and, don't want LGPL 2 effects,
use
.B liboc.so
or
.B liboc.a
that follows BSD license.

.SH DESCRIPTION
The
.BI preg_grep()
api searches the input string for lines containing a match to the given pcre
regular expression pattern.

The
.BI preg_fgrep()
api returns with given path instead of subject of the
.BI preg_grep().

.TP
.B regex
.br
The pattern to search for, as a string.

.TP
.B subject/path
.br
The input string or the input path.

.TP
.B reverse
.br
Set true, returns unmatched line.

.SH "RETURN VALUE"
Character pointer of the matched lines. The last new line(\\n) is removed.

When occurs internal error,
.BI preg_grep()
and
.BI preg_fgrep()
return null. If the return character pointer is not null, the caller should
deallocate this buffer using
.BI free().

.SH EXAMPLE
.nf
#include <olibc/libpcre.h>

int main (void) {
	char *buf;
	char *string = "asdf\\nqwer\\n123AsdFasdf\\n";

	buf = preg_grep ("/ASDF/i", string, 0);
	printf ("%s\\n", buf);

	free (buf);

	return 0;
}
.fi

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
