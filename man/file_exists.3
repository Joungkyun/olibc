.TH file_exists(3) 2011-03-16 "Linux Manpage" "OOPS Library's Manual"
.\" Process with
.\" nroff -man file_exists.3
.\" 2011-03-16 JoungKyun Kim <htt://oops.org>
.\" $Id: file_exists.3,v 1.8 2011-03-24 11:29:24 oops Exp $
.SH NAME
file_exists \- Checks whether a file or directory exists
.br
file_status \- Checks type of a file or a directory

.SH SYNOPSIS
.B #include <olibc/libfile.h>
.sp
.BI "int file_exists (const char * path, int mode);"
.br
.BI "int file_status (const char * path);"

.SH "Link library"
.B \-loc
or
.B \-lolibc
.br

.B libolibc.so
and
.B libolibc.a
include
.B "LGPL2 symbols,"
so links this library, your object or binary is follows LGPL2.
If you don't need idn library and, don't want LGPL 2 effects,
use
.B liboc.so
or
.B liboc.a
that follows BSD license.

.SH DESCRIPTION
The
.BI file_exsits()
api hecks whether a file or directory exists with mode.

.TP
.B path
.br
Path to the file or directory

.TP
.B mode
.br
check conditions.

.br
.B OC_IS_NCHK 0
=> check only exists
.br
.B OC_IS_FILE 1
=> check whether is regular file or not
.br
.B OC_IS_DIR 2
=> check whether is regular directory or not
.br
.B OC_IS_SLINK 3
=> check whether is symbolic link or not
.br
.B OC_IS_CDEV 4
=> check whether is character device or not
.br
.B OC_IS_BDEV 5
=> check whether is block device or not
.br
.B OC_IS_FIFO 6
=> check whether is FIFO or not
.br
.B OC_IS_SOCK 7
=> check whether is socket or not

.PP
The
.BI file_status()
api checks type of a file or a directory.

.TP
.B path
.br
Path to the file or directory


.SH "RETURN VALUE"
The
.BI file_exists()
api retruns true on success, otherwise returns false.

The
.BI file_status()
api return constant of file type or false.

.SH EXAMPLE
.nf
#include <olibc/libfile.h>

int main (void) {
    char * path = "/var";

    printf ("ANY  : %d\\n", file_exists (path, OC_IS_NCHK));
    printf ("FILE : %d\\n", file_exists (path, OC_IS_FILE));
    printf ("DIR  : %d\\n", file_exists (path, OC_IS_DIR));
    printf ("SLINK: %d\\n", file_exists (path, OC_IS_SLINK));
    printf ("CDEV : %d\\n", file_exists (path, OC_IS_CDEV));
    printf ("BDEV : %d\\n", file_exists (path, OC_IS_BDEV));
    printf ("FIFO : %d\\n", file_exists (path, OC_IS_FIFO));
    printf ("SOCK : %d\\n", file_exists (path, OC_IS_SOCK));

    printf (
        "%s is %s directory\\n",
        (file_exists (path) == OC_IS_DIR) ? "" : "not"
    );

    return 0;
}
.fi

.SH AUTHOR
JoungKyun.Kim <http://oops.org>

.SH BUGS
Please report bug on QnA bulletin board on http://oops.org/
